{"version":3,"sources":["transitions/slideFromLeft.module.css","components/ContactElement/ContactElement.module.css","components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/App/App.module.css","transitions/slideFromRight.module.css","transitions/pop.module.css","components/ContactForm/ContactForm.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onFormSubmit","reset","this","onSubmit","className","styles","form","htmlFor","type","required","onChange","mask","placeholder","Component","ContactElement","contact","onDeleteContact","contactElement","onClick","id","deleteBtn","ContactList","contacts","TransitionGroup","component","map","CSSTransition","key","timeout","unmountOnExit","classNames","slideFromLeftTransition","Filter","onChangeFilter","Notification","message","notification","App","filter","showMessage","changeFilter","formData","contactToAdd","uuidv4","find","setTimeout","fromLS","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","in","slideFromRightTransition","appear","title","length","popTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2053a70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromLeft_enter__1F_da\",\"appear\":\"slideFromLeft_appear__1l-72\",\"enterActive\":\"slideFromLeft_enterActive__3eZCj\",\"appearActive\":\"slideFromLeft_appearActive__3y4gt\",\"appearDone\":\"slideFromLeft_appearDone__1x8S_\",\"exit\":\"slideFromLeft_exit__2e3ms\",\"exitActive\":\"slideFromLeft_exitActive__TkYGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactElement_deleteBtn__20PqZ\",\"contactElement\":\"ContactElement_contactElement__j-CDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromRight_enter__6dU6W\",\"enterActive\":\"slideFromRight_enterActive__3xCMV\",\"exit\":\"slideFromRight_exit__2KA8L\",\"exitActive\":\"slideFromRight_exitActive__2TwKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1NM7x\",\"enterActive\":\"pop_enterActive__1Bhql\",\"exit\":\"pop_exit__1_phz\",\"exitActive\":\"pop_exitActive__3xbz2\"};","// Core\nimport React, { Component } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\n// Styles\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onFormSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!this.state.name || !this.state.number) {\n      return;\n    }\n\n    this.props.onFormSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className={`${styles.form} container shadow`}\n      >\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"number\">\n          Number\n          <MaskedInput\n            mask={[\n              '(',\n              /\\d/,\n              /\\d/,\n              /\\d/,\n              ')',\n              ' ',\n              /\\d/,\n              /\\d/,\n              /\\d/,\n              '-',\n              /\\d/,\n              /\\d/,\n              /\\d/,\n              /\\d/,\n            ]}\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            placeholder=\"(___) ___-____\"\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Styles\nimport styles from './ContactElement.module.css';\n\nconst ContactElement = ({ contact, onDeleteContact }) => (\n  <div className={`${styles.contactElement} container shadow`}>\n    <span>\n      {contact.name}: {contact.number}\n    </span>\n    <button\n      onClick={() => onDeleteContact(contact.id)}\n      className={styles.deleteBtn}\n      type=\"button\"\n    >\n      âœ•\n    </button>\n  </div>\n);\n\nContactElement.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactElement;\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n// Components\nimport ContactElement from '../ContactElement/ContactElement';\n// Transitions\nimport slideFromLeftTransition from '../../transitions/slideFromLeft.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <TransitionGroup component=\"ul\">\n    {contacts.map((contact) => (\n      <CSSTransition\n        key={contact.id}\n        timeout={200}\n        unmountOnExit\n        classNames={slideFromLeftTransition}\n      >\n        <li>\n          <ContactElement contact={contact} onDeleteContact={onDeleteContact} />\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <div className=\"container shadow\">\n    <p>Find contacts by name:</p>\n    <input name=\"filter\" value={value} onChange={onChangeFilter} />\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <div className={styles.notification}>{message}</div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","// Core\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\n// Components\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport Notification from '../Notification/Notification';\n// Styles\nimport styles from './App.module.css';\n// Transitions\nimport slideFromRightTransition from '../../transitions/slideFromRight.module.css';\nimport slideFromLeftTransition from '../../transitions/slideFromLeft.module.css';\nimport popTransition from '../../transitions/pop.module.css';\n\nimport 'normalize.css';\n\nconst filterContacts = (contacts, filter) =>\n  contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    message: '',\n    showMessage: false,\n  };\n\n  componentDidMount() {\n    const fromLS = JSON.parse(localStorage.getItem('contacts'));\n    if (fromLS) {\n      this.setState({ contacts: fromLS });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = (e) => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  onDeleteContact = (id) => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  onFormSubmit = (formData) => {\n    const { contacts } = this.state;\n\n    const contactToAdd = {\n      id: uuidv4(),\n      name: formData.name,\n      number: formData.number,\n    };\n\n    if (contacts.find((contact) => contact.name === contactToAdd.name)) {\n      this.setState({ showMessage: true, message: 'Contact already exists!' });\n      setTimeout(() => {\n        this.setState({ showMessage: false });\n      }, 2000);\n      return;\n    }\n\n    this.setState({\n      contacts: [...contacts, contactToAdd],\n    });\n  };\n\n  render() {\n    const { contacts, filter, message, showMessage } = this.state;\n\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <div className=\"container\">\n        <CSSTransition\n          in={showMessage}\n          timeout={200}\n          classNames={slideFromRightTransition}\n          unmountOnExit\n        >\n          <Notification message={message} />\n        </CSSTransition>\n\n        <CSSTransition\n          in\n          appear\n          timeout={500}\n          classNames={slideFromLeftTransition}\n        >\n          <h1 className={styles.title}>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm onFormSubmit={this.onFormSubmit} />\n\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={200}\n          classNames={popTransition}\n          unmountOnExit\n        >\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}